<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6V/vgLEl8zqniwAAAABJRU5ErkJggg==
</value>
  </data>
</root>